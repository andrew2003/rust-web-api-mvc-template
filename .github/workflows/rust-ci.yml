name: Rust CI
#Run when push code to main or create pull_request to main
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  setup:
    name: Setup rust tool chain
    runs-on: ubuntu-latest
    needs: setup
    steps:
      # Get code from repo
      - uses: actions/checkout@v4
        # Set up Rust tool chain
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy
          override: true

  cargo-check:
    name: Cargo check code
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      # Check code with cli "cargo check"
      - run: cargo check
  rust-clippy-analyze:
    name: rust-clippy analyzing
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt
      - name: Run rust-clippy
        run:
          cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true
  format-check:
    name: Check format code
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
        # Check format code with cli "cargo fmt --all -- --check"
      - run: cargo fmt --all -- --check
  test:
    name: Run test
    runs-on: ubuntu-latest
    # Set up postgres
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose