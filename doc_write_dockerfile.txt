FROM: Khai báo 1 base image (môi trường mà code có thể chạy được trên đó)
cho image chính bắt buộc phải có.

##### WORKDIR
    - Chỉ định thư mục mà ta làm việc
***** Example:
    WORKDIR /app
***** Note:

##### USER
    - Chỉ định user nào có quyền thực hiện các lệnh mà ta làm việc
***** Example:
    USER andrewTr
***** Note:
    - Trước khi sử dụng cần tạo user bằng RUN

##### RUN <command>
    - Run dùng để chạy 1 vài lệnh để build image (install package, update file, build file)
***** Example:
    RUN cargo install bunyan
    RUN apt-get update
    RUN ["cargo", "install", "-g", "..."]
***** Note:
=> Sử dụng khi muốn cài package


##### ENV key=value || ARG key=value
    - Cung cấp metadata vào image vd (Thông tin người dùng, ngày tạo ...)
    - Key và value là duy nhất
    - ENV vs ARG khác nhau ở điểm ARG chỉ chạy khi build image còn ENV thì chạy cả khi build và run
***** Example:
    ENV myFile= file
    ARG mtFile= file
***** Note:


##### LABEL key=value
    - Ghi metadata vào image vd (Thông tin người dùng, ngày tạo ...) khi mà build image
    - Key và value là duy nhất
    - 1 image có thể lưu nhiê label
***** Example:
    ENV myFile= file
    ARG mtFile= file
***** Note:


##### COPY <source> <destination>
    - Gần giống như ADD chỉ khác là không thể copy file remote và nếu copy file chứa
        rar hoặc tar thì sẽ copy luôn chứ không giải nén
***** Example:
    COPY ["src/config/config.rs", "/myFile/"]
    COPY src/config/config.rs /myFile/
    COPY [--chown=user:group] src/config/config.rs /myFile/
    COPY . .


##### ADD <source> <destination>
    - Copy từ source code vào dest
    - Source: Location những file, folder trong prj
    - Dest: Location những file, folder trong image khi build
***** Example:
    ADD src/config/config.rs /myFile/
***** Note
    - Nếu có authen/author trong docker file thì cần phải cha câu lệnh run trước Add
       để xác minh vì Add không hỗ trợ.
    - Chỉ add được file từ source code chứ không add được từ ngoài
    - Nếu add forder thì chỉ copy nội dung
    - Nếu copy thư mục thì phải có dấu / ở cuối
    - Nếu file có kí tự đặc biệt thì nên cho vào 1 thư mục rồi hẵng Add
    - Nếu dest không tồn tại thì sẽ tạo và copy vô, nếu tồn tại thì chỉ cần add thôi
       file tar, rar add sẽ tự động giải nén và chỉ lấy nội dung


##### CMD ["executable", "parameter", ...]
    - Chạy trên container khởi tạo đã được build trên 1 image
***** Example:
    CMD ["cargo", "run", ...]           # Dạng Exec Form
    CMD cargo run                       # Dạng Shell Form
***** Note:
    - Nếu câu lệnh như là (Ex: CMD start start start) thì câu lệnh này sẽ là parameter của Entrypoint
    - Nếu chạy dạng form thì sẽ không thể là parameter của entrypoin được
    - Nếu trong dockerfile có nhiều CMD thì sẽ docker sẽ chỉ chạy CMD cuối cùng
    - Nếu ta tạo 1 container = 1 lệnh shell thì cmd của container đó sẽ bị thay thế bởi lệnh shell
        ta vừa ghi khi khởi tạo.


##### ENTRYPOINT ["executable", "parameter", ...]
    - Chạy trên container khởi tạo được build trên 1 image
***** Example:
    ENTRYPOINT ["cargo", "run", ...]           # Dạng form
    ENTRYPOINT cargo run                       # Dạng Shell
***** Note:
    - Nếu có Entrypoint và CMD trong 1 dockerfile thì CMD sẽ là parameter cho Entrypoint
    - Nếu dùng dạng shell cho Entrypoint thì sẽ ignore toàn bộ CMD nếu có của Dockerfile
    - Nếu ta tạo 1 container = 1 lệnh shell thì Entrypoint của container đó sẽ không bị thay thế bởi lệnh shell
        ta vừa ghi khi khởi tạo.

=>  Sử dụng khi muốn thực hiện 1 câu lệnh nào đó trên container
==> Sử dụng kết hợp Entrypoint và CMD khi muốn cung cấp các parameter mặc định cho Entrypoint và cmd tuỳ chỉnh
    khi muốn khởi tạo container


##### EXPOSE 80
    - Cung cấp port để giao tiếp vs các container khác
    - Các container phải trong cùng 1 docker network
    - ENV vs ARG khác nhau ở điểm ARG chỉ chạy khi build image còn ENV thì chạy cả khi build và run
***** Example:
    EXPOSE 80
***** Note:


##### MAINTAINER value || LABEL MAINTAINER key value
    - Set tên người tạo container
***** Example:
    LABEL MAINTAINER author= AndrewTran
***** Note:

##### VOLUME key value
    - volume sẽ không bị xoá nếu container bị xoá mà chỉ có thể bị xoá khi chúng ta xoá chúng
    - Chia sẻ file từ host vào container
    - Container build on image, containner map with container, data of container store in volume
        and volume store data which by share file from host into volume
        Now, if you edit file in host => data in volume will update and data in container with
        merge with new data in volume and will update auto.
***** Example:
    LABEL MAINTAINER author= AndrewTran
***** Note:



